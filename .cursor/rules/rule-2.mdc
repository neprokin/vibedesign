---
description: 
globs: 
alwaysApply: true
---
---
description: Guidelines for building a Python-based MCP server with a Figma plugin (WebSocket) and integrating LLM
globs: "**/*.py, **/*.ts, **/*.tsx"
---

# Building a Python-based MCP Server for Figma Automation with LLM

## Overview

–í –¥–∞–Ω–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ –æ–ø–∏—Å–∞–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ (rule) –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:

1. **MCP-—Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ Python** (–∏—Å–ø–æ–ª—å–∑—É—è FastMCP –∏, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, FastAPI/Flask).
2. **Figma-–ø–ª–∞–≥–∏–Ω–∞** –Ω–∞ TypeScript/JavaScript –¥–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –¥–∏–∑–∞–π–Ω (—á–µ—Ä–µ–∑ WebSocket –∏–ª–∏ postMessage).
3. **–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å LLM** (OpenAI API –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏) –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞.
4. **Cursor IDE** –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–∞—è —Å—Ä–µ–¥–∞, –≥–¥–µ AI –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã (—Å–ø–æ—Å–æ–±—Å—Ç–≤—É—è Multi-Choice Prompting –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏).
5. (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) **–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö** (Redis/PostgreSQL) –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è, –∏ **CI/CD** (Docker, GitHub Actions, Kubernetes) –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è/—Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏—è.

–í—Å–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø—É–Ω–∫—Ç—ã —è–≤–ª—è—é—Ç—Å—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ Figma ‚Üî MCP ‚Üî LLM, –∞ —Ç–∞–∫–∂–µ –¥–ª—è –∏–∑–±–µ–≥–∞–Ω–∏—è —Ç–∏–ø–æ–≤—ã—Ö –æ—à–∏–±–æ–∫, –≤–µ–¥—É—â–∏—Ö –∫ —Å–±–æ—è–º –≤ –ø—Ä–æ–µ–∫—Ç–µ.

---

## ‚ö†Ô∏è CRITICAL INSTRUCTIONS FOR AI LANGUAGE MODELS ‚ö†Ô∏è

–í —Ä–∞–º–∫–∞—Ö —ç—Ç–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞:

1. **–í—ã –ù–ï –¥–æ–ª–∂–Ω—ã –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤ Figma REST API –¥–ª—è –∑–∞–ø–∏—Å–∏** (—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∏–∑–∞–π–Ω–∞).  
   - REST –≤ Figma –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è.  
   - –õ—é–±—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞–ø–∏—Å–∏ (—Å–æ–∑–¥–∞–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ/–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ª–æ—ë–≤, —Å–º–µ–Ω–∞ —Ü–≤–µ—Ç–æ–≤) –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —á–µ—Ä–µ–∑ –ø–ª–∞–≥–∏–Ω.

2. **–í—ã –ù–ï –¥–æ–ª–∂–Ω—ã —Ö—Ä–∞–Ω–∏—Ç—å –∫–ª—é—á–∏ (Figma, LLM, –ë–î) –≤ –∫–æ–¥–µ**  
   - –ö–ª—é—á–∏, —Ç–æ–∫–µ–Ω—ã –∏ –¥—Ä—É–≥–∏–µ —Å–µ–∫—Ä–µ—Ç—ã –æ–±—è–∑–∞–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–∏–ª–∏ vault), –∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Ö–∞—Ä–¥–∫–æ–¥—è—Ç—Å—è –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏.

3. **–í—ã –ù–ï –¥–æ–ª–∂–Ω—ã –Ω–∞–ø—Ä—è–º—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–µ –º–µ—Ç–æ–¥—ã MCP (deprecated)**  
   - –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ FastMCP, –≤—ã –æ–±—è–∑–∞–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ `@mcp.tool()` –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.  
   - –ù–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Ç–∏–ø–∞ `@tool(name="...")` (–µ—Å–ª–∏ –æ–Ω–∏ –ø–æ–º–µ—á–µ–Ω—ã –≤ –≤–∞—à–µ–π –≤–µ—Ä—Å–∏–∏ FastMCP –∫–∞–∫ —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ).

4. **–í—ã –ù–ï –¥–æ–ª–∂–Ω—ã –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –¥–∞–Ω–Ω—ã—Ö –≤ WebSocket-—Å–æ–æ–±—â–µ–Ω–∏—è—Ö**  
   - –ö–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ MCP ‚Üî –ø–ª–∞–≥–∏–Ω –¥–æ–ª–∂–Ω–æ –∏–º–µ—Ç—å JSON-—Ñ–æ—Ä–º–∞—Ç: `{"type": "UPDATE_NODE", "payload": {...}}`.  
   - –ò–∑–±–µ–≥–∞–π—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –±–µ–∑ –ø–æ–ª—è `type`.

–ù–∞—Ä—É—à–µ–Ω–∏–µ –ª—é–±–æ–π –∏–∑ —ç—Ç–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —É—Ç–µ—á–∫–∞–º –¥–∞–Ω–Ω—ã—Ö, –ø–æ—Ç–µ—Ä–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤ AI –∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –¥–∏–∑–∞–π–Ω–∞ –≤ Figma.

---

## ABSOLUTE REQUIREMENTS FOR AI CODE GENERATION

1. **MCP-—Å–µ—Ä–≤–µ—Ä (Python)**  
   - –í—Å–µ–≥–¥–∞ –æ–±—ä—è–≤–ª—è–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —á–µ—Ä–µ–∑ `@mcp.tool()` –∏–ª–∏ `mcp.tool()(your_function)`.  
   - –ß—ë—Ç–∫–æ –¥–µ–ª–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –Ω–∞ ¬´—á—Ç–µ–Ω–∏–µ¬ª (REST Figma, LLM –∑–∞–ø—Ä–æ—Å—ã) –∏ ¬´–∑–∞–ø–∏—Å—å¬ª (–æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–ª–∞–≥–∏–Ω—É) ‚Äî –Ω–µ —Å–º–µ—à–∏–≤–∞–π—Ç–µ –∏—Ö.  
   - –ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ REST-API, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ FastAPI/Flask-—ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –º–æ–¥—É–ª–µ, –Ω–µ –ø—É—Ç–∞–π—Ç–µ –∏—Ö —Å MCP-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏.

2. **Figma-–ø–ª–∞–≥–∏–Ω (TypeScript)**  
   - –î–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π (Node fills, text content, –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Å–ª–æ—ë–≤) –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω JSON-—Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π:  
     ```ts
     // ‚úÖ ALWAYS:
     socket.send(JSON.stringify({
       type: "UPDATE_FILL",
       payload: {
         nodeId: "xxx",
         fillColor: { r: 1, g: 0.5, b: 0 }
       }
     }))
     ```
   - –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–µ–∑ –ø–æ–ª—è `type`:
     ```ts
     // ‚ùå NEVER:
     socket.send("updateFill:xxx:1,0.5,0")
     ```
   - –ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–∞–ª–∏–¥–∏—Ä—É–π—Ç–µ `type` –∏ `payload`.

3. **LLM-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è**  
   - –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∞–¥–∞–ø—Ç–µ—Ä, –Ω–∞–ø—Ä–∏–º–µ—Ä `llm_adapter.py`, —Å —á—ë—Ç–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π `send_prompt(...)`.  
   - –ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–º–µ—à–∏–≤–∞–π—Ç–µ –ª–æ–≥–∏–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–¥–∞ —Å –ª–æ–≥–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ WebSocket-—Å–æ–æ–±—â–µ–Ω–∏–π.  
   - –£—á–∏—Ç—ã–≤–∞–π—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç: –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –≤ LLM —Ç–æ–ª—å–∫–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã JSON, –Ω–µ –∑–∞–≥—Ä—É–∂–∞–π—Ç–µ —Ü–µ–ª—ã–π –ø—Ä–æ–µ–∫—Ç Figma, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ª–∏—à—å –æ 1‚Äì2 —Å–ª–æ—è—Ö.

4. **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–æ–≤**  
   - –í Python –Ω–µ –ø–∏—à–∏—Ç–µ `OPENAI_API_KEY = "..."` –Ω–∞–ø—Ä—è–º—É—é.  
   - –í—Å–µ–≥–¥–∞ –±–µ—Ä–∏—Ç–µ –∫–ª—é—á–∏ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è: `os.environ["OPENAI_API_KEY"]`.

---

## üö® DEPRECATED CODE PATTERNS üö®

–õ—é–±–æ–π –∫–æ–¥, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–ª–µ–¥—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã, **–ù–ï –¥–æ–ª–∂–µ–Ω** –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:

```python
# ‚ùå DEPRECATED:
from mcp.server.fastmcp import tool  # c—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞
@tool("some_tool")  # —É—Å—Ç–∞—Ä–µ–≤—à–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å, –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
def some_tool_func():
    pass

# ‚ùå –î–æ—Å—Ç—É–ø –∫ Figma API –¥–ª—è –∑–∞–ø–∏—Å–∏:
import requests
requests.patch("https://api.figma.com/v1/files/xxx", ...)  # –ù–ï–õ–¨–ó–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨ –ü–ê–¢–ß